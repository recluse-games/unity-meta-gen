on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v0.*'

name: Create Release

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.13
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: |
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi

      - name: Build
        run: go build -v .

      - name: Test
        run: go test -v .

      # Create Artifact Upload Directory
      - run: mkdir -p recluse-games/unity-meta-gen/build

      # Copy Build Artifact to Artifact Upload Directory
      - run: cp unity-meta-gen recluse-games/unity-meta-gen/build/unity-meta-gen

      # Publish Uploaded Artifact
      - uses: actions/upload-artifact@v2
        with:
          name: unity-meta-gen
          path: recluse-games/unity-meta-gen/build/unity-meta-gen

      - name: Checkout code
        uses: actions/checkout@master

      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Official release
          draft: false
          prerelease: true

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: recluse-games/unity-meta-gen/build/unity-meta-gen
          asset_name: unity-meta-gen
          asset_content_type: application/octet-stream
